/*
 * Autogenerated by the Meson build system.
 * Do not edit, your changes will be lost.
 */

#pragma once

/* The newlib version in string format. */
#define _NEWLIB_VERSION "4.3.0"

/* ARM Semihost APIs supported */
#undef __ARM_SEMIHOST

/* assert() is verbose by default */
#define __ASSERT_VERBOSE

/* Use atomics for fgetc/ungetc for re-entrancy */
#define __ATOMIC_UNGETC

#undef __FAST_BUFIO

/* Always optimize strcmp for performance */
#define __FAST_STRCMP

/* use global errno variable */
#define __GLOBAL_ERRNO

/* Use bitfields in packed structs */
#undef __HAVE_BITFIELDS_IN_PACKED_STRUCTS

/* The compiler supports __builtin_add_overflow */
#define __HAVE_BUILTIN_ADD_OVERFLOW 1

/* The compiler supports __builtin_alloca */
#define __HAVE_BUILTIN_ALLOCA 1

/* The compiler supports __builtin_complex */
#define __HAVE_BUILTIN_COMPLEX 1

/* The compiler supports __builtin_copysign */
#define __HAVE_BUILTIN_COPYSIGN 1

/* The compiler supports __builtin_copysignl */
#define __HAVE_BUILTIN_COPYSIGNL 1

/* The compiler supports __builtin_ctz */
#define __HAVE_BUILTIN_CTZ 1

/* The compiler supports __builtin_ctzl */
#define __HAVE_BUILTIN_CTZL 1

/* The compiler supports __builtin_ctzll */
#define __HAVE_BUILTIN_CTZLL 1

/* The compiler supports __builtin_expect */
#undef __HAVE_BUILTIN_EXPECT

/* The compiler supports __builtin_ffs */
#define __HAVE_BUILTIN_FFS 1

/* The compiler supports __builtin_ffsl */
#define __HAVE_BUILTIN_FFSL 1

/* The compiler supports __builtin_ffsll */
#define __HAVE_BUILTIN_FFSLL 1

/* The compiler supports __builtin_finitel */
#undef __HAVE_BUILTIN_FINITEL

/* The compiler supports __builtin_isfinite */
#define __HAVE_BUILTIN_ISFINITE 1

/* The compiler supports __builtin_isinf */
#define __HAVE_BUILTIN_ISINF 1

/* The compiler supports __builtin_isinfl */
#undef __HAVE_BUILTIN_ISINFL

/* The compiler supports __builtin_isnan */
#define __HAVE_BUILTIN_ISNAN 1

/* The compiler supports __builtin_isnanl */
#undef __HAVE_BUILTIN_ISNANL

/* The compiler supports __builtin_issignalingl */
#undef __HAVE_BUILTIN_ISSIGNALINGL

/* The compiler supports __builtin_mul_overflow */
#define __HAVE_BUILTIN_MUL_OVERFLOW 1

/* Compiler flag to prevent detecting memcpy/memset patterns */
#undef __HAVE_CC_INHIBIT_LOOP_TO_LIBCALL

/* Compiler supports _Complex */
#undef __HAVE_COMPLEX

/* System provides fcntl function */
#undef __HAVE_FCNTL

/* IEEE fp funcs available */
#undef __IEEEFP_FUNCS

/* math library does not set errno (offering only ieee semantics) */
#define __IEEE_LIBM

/* Support INIT_ARRAY linker sections */
#define __INIT_FINI_ARRAY

/* Support _init() and _fini() functions */
#undef __INIT_FINI_FUNCS

#undef __IO_C99_FORMATS

/* The default printf and scanf variants */
#define __IO_DEFAULT 'm'

#define __IO_FLOAT_EXACT

#undef __IO_LONG_DOUBLE

#undef __IO_LONG_LONG

#undef __IO_MINIMAL_LONG_LONG

#undef __IO_PERCENT_B

/* support %n in printf format strings */
#undef __IO_PERCENT_N

#undef __IO_POS_ARGS

/* avoid software division in decimal conversion */
#define __IO_SMALL_ULTOA

#define __IO_WCHAR

/* math library sets errno */
#undef __MATH_ERRNO

#undef __MB_CAPABLE

/* Provide smaller malloc implementation */
#undef __NANO_MALLOC

#undef __NANO_MALLOC_CLEAR_FREED

/* The newlib minor version number. */
#define __NEWLIB_MINOR__ 3

/* The newlib patch level. */
#define __NEWLIB_PATCHLEVEL__ 0

/* The newlib version in string format. */
#define __NEWLIB_VERSION__ "4.3.0"

/* The newlib major version number. */
#define __NEWLIB__ 4

/* Use old math code (undef auto, 0 no, 1 yes) */
#undef __OBSOLETE_MATH

/* Use old math code for double funcs (undef auto, 0 no, 1 yes) */
#undef __OBSOLETE_MATH_DOUBLE

/* Use old math code for float funcs (undef auto, 0 no, 1 yes) */
#undef __OBSOLETE_MATH_FLOAT

/* The Picolibc minor version number. */
#define __PICOLIBC_MINOR__ 8

/* The Picolibc patch level. */
#define __PICOLIBC_PATCHLEVEL__ 10

/* The Picolibc version in string format. */
#define __PICOLIBC_VERSION__ "1.8.10"

/* The Picolibc major version number. */
#define __PICOLIBC__ 1

#define __PICO_EXIT

/* Optimize for space over speed */
#undef __PREFER_SIZE_OVER_SPEED

/* Semihost APIs supported */
#undef __SEMIHOST

/* Disable multi-thread support */
#define __SINGLE_THREAD

/* Perform POSIX-conforming file locking for all stdio operations */
#undef __STDIO_LOCKING

/* use thread local storage */
#undef __THREAD_LOCAL_STORAGE

/* _set_tls and _init_tls functions available */
#undef __THREAD_LOCAL_STORAGE_API

/* Use Raspberry Pi RP2040 CPUID register to index thread local storage value */
#undef __THREAD_LOCAL_STORAGE_RP2040

/* use thread local storage for stack protection canary */
#undef __THREAD_LOCAL_STORAGE_STACK_GUARD

/* Use tiny stdio from gcc avr */
#define __TINY_STDIO

